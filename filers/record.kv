#@PydevCodeAnalysisIgnore
#:kivy 1.8
#:import Matrix kivy.graphics.transformation.Matrix
#:import partial functools.partial
#:import dirname os.path.dirname
#:import formats_out ffpyplayer.tools.formats_out
#:import formats_in ffpyplayer.tools.formats_in
#:import pix_fmts ffpyplayer.tools.pix_fmts
#:import codecs_dec ffpyplayer.tools.codecs_dec
#:import codecs_enc ffpyplayer.tools.codecs_enc
#:import pretty_space filers.tools.pretty_space
#:import pretty_time filers.tools.pretty_time
#:import RTVPlayer filers.record.RTVPlayer
#:import Players filers.record.Players


<PlayerView>:
    knspace: 'fork'
    padding: '15dp',
    canvas:
        Color:
            rgba: 1, 1, 1, 1
        BorderImage:
            border: (16, 16, 16, 16)
            pos: self.pos
            size: self.size
            source: 'blue_border.png'
    GridStencil:
        cols: 1
        spacing: '5dp',
        GridLayout:
            id: stats
            rows: 1
            size_hint: None, None
            width: self.minimum_width
            height: '80dp'
            padding: ['15dp']
            spacing: ['10dp']
            Label:
                padding: '15dp', '15dp'
                text: root.player.cls
                size_hint_x: None
                width: self.texture_size[1]
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'settings.png' if self.state == 'normal' else 'settings_down.png'
                on_release: root.players.show_settings(root.player)
            Widget:
                size_hint_x: None
                width: self.height
                canvas:
                    Color:
                        rgb: (1, 0, 0) if root.disk_used_percent >= .75 else (0, 1, 0)
                    Ellipse:
                        pos: self.pos
                        size: self.size
                        angle_end: root.disk_used_percent * 360.
                    Line:
                        circle: self.center_x, self.center_y, self.height / 2.
            Label:
                padding: '15dp', '15dp'
                text: root.disk_stat
                size_hint: None, None
                size: self.texture_size
                markup: True
            KNToggleButton:
                size_hint_x: None
                width: self.height
                knsname: 'play'
                background_normal: 'play.png'
                background_down: 'pause.png'
                background_disabled_normal: 'play.png'
                background_disabled_down: 'pause.png'
                disabled: not root.player or not not root.player.config_active
                background_color: [.2, .2, .2, 1] if self.disabled else [1, 1, 1, 1]
                on_release: root.player.play() if self.state == 'down' else root.player.stop()
        GridLayout:
            size_hint_y: None
            height: self.minimum_height
            spacing: 5
            rows: 1
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'browse.png' if self.state == 'normal' else 'browse_down.png'
                on_release:
                    app.filebrowser.target = path_dir.text
                    app.filebrowser.dirselect = True
                    app.filebrowser.multiselect = False
                    app.filebrowser.callback = partial(app.assign_path, path_dir)
                    app.filebrowser.open()
            KNSizedTextInput:
                id: path_dir
                hint_text: 'Directory'
                knsname: 'path_dir'
            KNSizedTextInput:
                hint_text: 'Filename'
                id: path_fname
                knsname: 'path_fname'
                fmt_text: ''
                orig_text: ''
                on_focus: root.handle_fname(path_fname, path_count)
            KNSizedTextInput:
                id: path_count
                knsname: 'path_count'
                input_filter: 'int'
                size_hint_x: None
                width: '40dp'
                hint_text: 'n'
                on_text: root.handle_fname(path_fname, path_count, 'count')
        RelativeLayout:
            id: display
            canvas:
                Color:
                    rgba: 1, 1, 1, 1
            BufferImage:
                knsname: 'display'
                do_rotation: False
                auto_bring_to_front: False
                size: self.parent.size
            GridLayout:
                rows: 1
                size_hint: None, None
                size: self.minimum_size
                right: self.size and (display.width - 20)
                top: self.size and (display.height - 20)
                spacing: ['20dp']
                ImageToggleButton:
                    id: record
                    knsname: 'record'
                    size_hint_x: None
                    width: self.height
                    source: 'record.png' if self.state == 'normal' else 'record_down.png'
                    on_release: root.player.record() if self.state == 'down' else root.player.stop_recording()
                ImageButton:
                    size_hint_x: None
                    width: self.height
                    source: 'screenshot.png' if self.state == 'normal' else 'screenshot_down.png'
                    on_release:
                        app.filebrowser.target = path_dir.text
                        app.filebrowser.dirselect = False
                        app.filebrowser.multiselect = False
                        app.filebrowser.callback = root.player.save_screenshot
                        app.filebrowser.ids.file_browser.ids.file_text.text = path_fname.fmt_text.split('.')[0] + '.bmp'
                        app.filebrowser.open()
                Widget:
                    size_hint: None, None
                    height: elapsed_record.texture_size[1]
                    width: max(self.width, elapsed_record.texture_size[0])
                    Label:
                        size: self.parent.size
                        id: elapsed_record
                        knsname: 'elapsed_record'
                        padding: '15dp', '15dp'
                        text: root.elapsed_recording
                        pos: self.parent.pos
                        markup: True


<PlayerRoot>:
    orientation: 'vertical'
    BoxLayout:
        orientation: 'horizontal'
        ScrollView:
            scroll_type: ['bars']
            bar_width: '15dp'
            on_size:
                outer_splitter.height = self.height
                inner_splitter.width = self.width
            Splitter:
                id: outer_splitter
                sizable_from: 'bottom'
                size_hint: None, None
                min_size: container.minimum_height
                width: inner_splitter.width
                padding: [0, 0, 0, 20]
                max_size: '10000dp'
                Splitter:
                    id: inner_splitter
                    sizable_from: 'right'
                    size_hint_x: None
                    min_size: container.minimum_width
                    max_size: '10000dp'
                    padding: [0, 0, 20, 0]
                    GridLayout:
                        id: container
                        spacing: '4dp'
                        rows: int(n_rows.text)
        ScrollView:
            do_scroll: False, True
            scroll_type: ['bars']
            bar_width: '15dp'
            size_hint_x: None
            width: bar.width
            GridLayout:
                id: bar
                cols: 1
                size_hint: None, None
                size: self.minimum_size
                spacing: ['15dp']
                ImageButton:
                    size_hint_y: None
                    height: self.width
                    source: 'browse.png' if self.state == 'normal' else 'browse_down.png'
                    on_release:
                        app.filebrowser.target = dirname(root.players.settings_path)
                        app.filebrowser.dirselect = False
                        app.filebrowser.multiselect = False
                        app.filebrowser.callback = partial(root.players.ui_config, True)
                        app.filebrowser.open()
                ImageButton:
                    size_hint_y: None
                    height: self.width
                    source: 'save.png' if self.state == 'normal' else 'save_down.png'
                    on_release:
                        app.filebrowser.target = dirname(root.players.settings_path)
                        app.filebrowser.dirselect = False
                        app.filebrowser.multiselect = False
                        app.filebrowser.callback = partial(root.players.ui_config, False)
                        app.filebrowser.open()
                ImageButton:
                    size_hint_y: None
                    height: self.width
                    source: 'add.png' if self.state == 'normal' else 'add_down.png'
                    on_release: root.players.add_player()
                RelativeLayout:
                    size_hint: None, None
                    height: self.width
                    width: '70dp'
                    true_width: int(self.width / (1 + 24 / 64.))
                    ImageButton:
                        id: expand_hori
                        size_hint: None, None
                        width: self.parent.true_width
                        height: int(24 / 64. * self.width)
                        source: 'expand_hori.png' if self.state == 'normal' else 'expand_hori_down.png'
                        on_release: inner_splitter.width += 100
                    ImageButton:
                        size_hint: None, None
                        height: self.parent.true_width
                        width: int(24 / 64. * self.height)
                        pos_hint: {'top': 1., 'right': 1.}
                        source: 'expand_vert.png' if self.state == 'normal' else 'expand_vert_down.png'
                        on_release: outer_splitter.height += 100
                    KNSpinner:
                        id: n_rows
                        knsname: 'recorder_n_rows'
                        text: '2'
                        on_text: root.players.cam_grid_rows = int(self.text)
                        padding: '20dp', '12dp'
                        values: map(str, range(1, 11))
                        size_hint: None, None
                        width: min(self.parent.width - expand_hori.height, self.texture_size[0])
                        height: min(self.parent.height - expand_hori.height, self.texture_size[1])
                        pos_hint: {'top': 1}


<VideoScreenSelect@RadioLabeledCheck>:
    on_release: self.knspace.popup.players.replace_player_cls(self.knspace.popup.player, self.text)
    group: 'video_source'

<PixelSizeSelect@BorderedGridLayout>:
    name: ''
    rgba: 0.196, 0.196, 0.31, 1
    rows: 1
    padding: '10dp'
    spacing: '10dp', '10dp'
    size_hint: None, None
    size: self.minimum_size
    SizedLabel:
        text: 'Pixel format:'
    KNSpinner:
        knsname: root.name + '_pix_fmt'
        values: [''] + pix_fmts
        size_hint_x: None
        width: '140dp'
        background_normal: ''
        background_color: .443, .361, .251, 1
        on_text: if self.knspace.popup and self.knspace.popup.player: self.knspace.popup.player.compute_preview_stats()
    Widget
        size_hint_x: None
        width: '10dp'
    SizedLabel:
        text: 'Size:'
    KNSizedTextInput:
        knsname: root.name + '_w'
        size_hint_x: None
        width: '60dp'
        input_filter: 'int'
        on_text: if self.knspace.popup and self.knspace.popup.player: self.knspace.popup.player.compute_preview_stats()
    SizedLabel:
        text: 'X'
    KNSizedTextInput:
        knsname: root.name + '_h'
        size_hint_x: None
        width: '60dp'
        input_filter: 'int'
        on_text: if self.knspace.popup and self.knspace.popup.player: self.knspace.popup.player.compute_preview_stats()

<FFmpegSettingsScreen@KNSpaceBehavior+Screen>:
    name: 'FFmpeg'
    size_hint: None, None
    size: ffmpeg_screen.minimum_size
    GridLayout:
        id: ffmpeg_screen
        cols: 1
        spacing: '5dp'
        BorderedGridLayout:
            rgba: .2, 0, .1, 1
            rows: 1
            padding: '5dp', '5dp'
            height: self.minimum_height
            size_hint_y: None
            SizedLabel:
                text: 'Filename:'
            KNSizedTextInput:
                id: filename
                knsname: 'filename'
        BoxLayout:
            size_hint_y: None
            height: '40dp'
            Widget
            RadioLabeledCheck:
                id: webcam_check
                knsname: 'webcam_fmt'
                group: 'video_fmt'
                text: 'Webcam'
                on_state: video_fmt.current = 'dshow' if self.state == 'down' else 'other'
            RadioLabeledCheck:
                knsname: 'other_fmt'
                group: 'video_fmt'
                text: 'Other'
            Widget
        KNSizedScreenManager:
            id: video_fmt
            knsname: 'video_fmt'
            canvas.before:
                Color:
                    rgba: .2, 0, .1, 1
                Rectangle:
                    pos: self.pos
                    size: self.size
                Color:
                    rgba: 1, 1, 1, 1
                BorderImage:
                    border: (16, 16, 16, 16)
                    pos: self.pos
                    size: self.size
                    source: 'blue_border.png'
                Color:
                    rgba: 1, 1, 1, 1
            Screen:
                size_hint_y: None
                name: 'dshow'
                height: dshow_screen.height
                on_manager: play_file_fmt.text = 'dshow'
                GridLayout:
                    id: dshow_screen
                    cols: 1
                    size_hint_y: None
                    height: self.minimum_height
                    padding: '30dp', '10dp'
                    spacing: '10dp', '10dp'
                    BoxLayout:
                        spacing: '10dp', '10dp'
                        size_hint_y: None
                        height: '40dp'
                        orientation: 'horizontal'
                        ImageButton:
                            size_hint_x: None
                            width: self.height
                            source: 'refresh.png' if self.state == 'normal' else 'refresh_down.png'
                            on_release: root.knspace.popup.player.refresh_dshow(dshow_cams, dshow_opts)
                        KNSpinner:
                            id: dshow_cams
                            knsname: 'dshow_cams'
                            background_normal: ''
                            background_color: .45, .13, .17, 1
                            on_text:
                                filename.text = self.text
                                if root.knspace.popup and root.knspace.popup.player: root.knspace.popup.player.update_dshow_opt(dshow_cams, dshow_opts)

                    KNSpinner:
                        id: dshow_opts
                        knsname: 'dshow_opts'
                        size_hint_y: None
                        height: '40dp'
                        background_normal: ''
                        background_color: .45, .13, .17, 1
            Screen:
                size_hint_y: None
                name: 'other'
                height: '60dp'
                GridLayout:
                    rows: 1
                    padding: '10dp'
                    spacing: '10dp', '10dp'
                    Widget
                    SizedLabel:
                        text: 'Format'
                    KNSpinner:
                        id: play_file_fmt
                        knsname: 'play_file_fmt'
                        values: [''] + formats_in
                        size_hint_x: None
                        width: '100dp'
                        background_normal: ''
                        background_color: .45, .13, .17, 1
                    SizedLabel:
                        text: 'Codec'
                    KNSpinner:
                        knsname: 'play_codec'
                        values: [''] + codecs_dec
                        size_hint_x: None
                        width: '120dp'
                        background_normal: ''
                        background_color: .45, .13, .17, 1
                    Widget
        Label:
            text: 'Display options'
            size_hint_y: None
            height: '40dp'
        PixelSizeSelect:
            name: 'play'

<RTVSettingsScreen@KNSpaceBehavior+Screen>:
    name: 'RTV'
    size_hint_y: None
    height: rtv_screen.minimum_height
    GridLayout:
        id: rtv_screen
        cols: 1
        spacing: '5dp'
        BorderedGridLayout:
            rgba: .2, 0, .1, 1
            cols: 2
            padding: '50dp', '10dp'
            size_hint_y: None
            height: self.minimum_height
            SizedLabel:
                text: 'Port:'
            KNSizedTextInput:
                knsname: 'rtv_port'
            SizedLabel:
                text: 'Computer:'
            KNSizedTextInput:
                knsname: 'rtv_remote_name'
            SizedLabel:
                text: 'Pipe:'
            KNSizedTextInput:
                knsname: 'rtv_pipe_name'
        BorderedGridLayout:
            rgba: .2, 0, .1, 1
            rows: 1
            padding: '30dp', '10dp'
            size_hint_y: None
            height: self.minimum_height
            Widget
            SizedLabel:
                text: 'Image:'
            KNSpinner:
                size_hint: None, None
                size: self.texture_size
                id: rtv_pix_fmt
                knsname: 'rtv_pix_fmt'
                values: ['gray', 'rgb24']
                padding: '25dp', '5dp'
                background_normal: ''
                background_color: .45, .13, .17, 1
            Widget
            SizedLabel:
                text: 'Size:'
            KNSpinner:
                size_hint: None, None
                size: self.texture_size
                padding: '25dp', '5dp'
                knsname: 'rtv_vid_fmt'
                values:['{} ({}, {})'.format(name, w, h) for (name, (w, h)) in sorted(RTVPlayer.video_fmts.items(), key=lambda x: x[1][0] * x[1][1])]
                background_normal: ''
                background_color: .45, .13, .17, 1
            Widget

<PTGraySettingsScreen@KNSpaceBehavior+Screen>:
    name: 'PTGray'
    size_hint_y: None
    height: pt_screen.minimum_height
    GridLayout:
        id: pt_screen
        cols: 1
        spacing: '5dp'
        BorderedGridLayout:
            rgba: .2, 0, .1, 1
            rows: 1
            padding: '50dp', '10dp'
            spacing: ['20dp']
            size_hint_y: None
            height: '70dp'
            disabled: not hasattr(root.knspace, 'popup') or not root.knspace.popup or not root.knspace.popup.player or not not root.knspace.popup.player.config_active
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'settings.png' if self.state == 'normal' else 'settings_down.png'
                on_release: root.knspace.popup.player.ask_config('gui')
            ImageButton:
                size_hint_x: None
                width: self.height
                source: 'refresh.png' if self.state == 'normal' else 'refresh_down.png'
                on_release: root.knspace.popup.player.ask_config('serials')
            KNSpinner:
                knsname: 'pt_serial'
                on_text: if root.knspace.popup: root.knspace.popup.player.serial = self.text
                background_normal: ''
                background_color: .45, .13, .17, 1
            KNSpinner:
                knsname: 'pt_ip'
                on_text: if root.knspace.popup: root.knspace.popup.player.ip = self.text
                background_normal: ''
                background_color: .45, .13, .17, 1


<PlayerSettings>:
    parent_obj: self.parent
    parent_width: root.parent_obj.width if root.parent_obj else 100
    parent_height: root.parent_obj.height if root.parent_obj else 100
    knspace: 'fork'
    knsname: 'popup'
    title: 'Player settings'
    auto_dismiss: False
    size_hint: None, None
    width: inner_splitter.width + 25
    height: outer_splitter.height + 100
    Splitter:
        id: outer_splitter
        sizable_from: 'bottom'
        size_hint: None, None
        width: inner_splitter.width
        height: min(grid_cont.minimum_height + 150, max(root.parent_height - 100, 0))
        max_size: max(0, root.parent_height - 100)
        Splitter:
            id: inner_splitter
            sizable_from: 'right'
            width: min(grid_cont.minimum_width + 100, max(root.parent_width - 50, 0))
            max_size: max(0, root.parent_width - 75)
            ScrollView:
                scroll_type: ['bars']
                bar_width: '15dp'
                GridLayout:
                    id: grid_cont
                    size_hint: None, None
                    size: max(self.minimum_width + 100, self.parent.width), self.minimum_height
                    rows: 1
                    spacing: '15dp'
                    padding: ['20dp', 0]
                    GridLayout:
                        id: settings_grid
                        cols: 1
                        size_hint: None, None
                        size: self.minimum_size
                        spacing: '15dp'
                        padding: '15dp'
                        GridLayout:
                            rows: 1
                            size_hint_y: None
                            height: '50dp'
                            padding: [0, '2dp']
                            Widget
                            VideoScreenSelect:
                                id: FFmpeg
                                text: 'FFmpeg'
                            VideoScreenSelect:
                                id: RTV
                                text: 'RTV'
                            VideoScreenSelect:
                                disabled: Players.ptgray_disabled
                                id: PTGray
                                text: 'PTGray'
                            KNToggleButton:
                                size_hint_x: None
                                width: self.height
                                knsname: 'play'
                                id: play
                                background_normal: 'play.png'
                                background_down: 'pause.png'
                                background_disabled_normal: 'play.png'
                                background_disabled_down: 'pause.png'
                                disabled: not root.player or not not root.player.config_active
                                background_color: [.2, .2, .2, 1] if self.disabled else [1, 1, 1, 1]
                                on_release: root.player.play() if self.state == 'down' else root.player.stop()
                            Widget
                        KNSizedScreenManager:
                            knsname: 'source_type'
                            FFmpegSettingsScreen
                            RTVSettingsScreen
                            PTGraySettingsScreen
                        Label:
                            text: 'Recording options'
                            size_hint_y: None
                            height: '40dp'
                        GridLayout:
                            cols: 1
                            size_hint: None, None
                            size: self.minimum_size
                            PixelSizeSelect:
                                name: 'record'
                            BorderedGridLayout:
                                rgba: 0.196, 0.196, 0.31, 1
                                rows: 1
                                padding: '10dp'
                                spacing: '10dp', '10dp'
                                size_hint_y: None
                                height: self.minimum_height
                                Widget
                                SizedLabel:
                                    text: 'Frame rate:'
                                KNSizedTextInput:
                                    knsname: 'record_rate'
                                    size_hint_x: None
                                    width: '60dp'
                                    input_filter: 'float'
                                    on_text: if root.player: root.player.compute_preview_stats()
                                SizedLabel:
                                    text: 'Drive Letter'
                                KNSizedTextInput:
                                    knsname: 'record_drive'
                                    size_hint_x: None
                                    width: '30dp'
                                    on_text: if root.player: root.player.compute_preview_stats()
                                Widget
                            Label:
                                size_hint_y: None
                                height: '50dp'
                                markup: True
                                text: root.player.preview_stats if root.player else ''
                        BoxLayout:
                            size_hint_y: None
                            height: '45dp'
                            Widget
                            Button:
                                padding: '20dp', 0
                                size_hint_x: None
                                width: self.texture_size[0]
                                text: 'Delete'
                                on_release: root.players.delete_player(root.player)
                            Button:
                                padding: '20dp', 0
                                size_hint_x: None
                                width: self.texture_size[0]
                                text: 'Close'
                                on_release: root.players.hide_settings(root.player)
                            Widget:
                                size_hint_x: .1
                    BufferImage:
                        do_rotation: False
                        knsname: 'display'
